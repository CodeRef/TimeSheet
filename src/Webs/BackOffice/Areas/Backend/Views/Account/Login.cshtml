@model  RestMeet.ViewModels.Login
@{
    ViewBag.Title = "Log in";
    Layout = "~/Areas/backend/Views/Shared/_Layout-Full.cshtml";
}
@section styles{
    @Styles.Render("~/Content/login")
    <style>
        .field-validation-error {
            color: #e80c4d;
            font-weight: bold;
        }

        input.input-validation-error {
            border: 1px solid #e80c4d;
        }

        .validation-summary-errors {
            color: #e80c4d;
            font-weight: bold;
            font-size: 1.1em;
        }
    </style>
}

<div class="logo">
    <a href="@Url.Action("Login")" style="font-size: 260%; font-weight: 600;">
        <font color="#FFFFFF">SIAM</font><font color="red">MARKET</font>
    </a>
</div>
<div class="content">
    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <h3 class="form-title">Use a local account to log in.</h3>
        <div class="alert alert-danger display-hide">
            <button class="close" data-close="alert"></button>
            <span>Enter any username and password. </span>
        </div>
        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">Username</label>
            <div class="input-icon">
                <i class="fa fa-user"></i>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control placeholder-no-fix", autocomplete = "off", placeholder = "Username", name = "username" })
            </div>
            @Html.ValidationMessageFor(m => m.UserName)
        </div>
        <div class="form-group">
            <label class="control-label visible-ie8 visible-ie9">Password</label>
            <div class="input-icon">
                <i class="fa fa-lock"></i>
                @Html.PasswordFor(m => m.Password, new { @class = "form-control placeholder-no-fix", autocomplete = "off", placeholder = "Password", name = "password" })
            </div>
            @Html.ValidationMessageFor(m => m.Password)
        </div>
        <div class="form-actions">
            @Html.CheckBoxFor(m => m.RememberMe)
            @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })
            <button type="submit" class="btn green pull-right">
                Login <i class="m-icon-swapright m-icon-white"></i>
            </button>
        </div>
    }
    <form class="forget-form" action="index.html" method="post">
        <h3>Forget Password ?</h3>
        <p>
            Enter your e-mail address below to reset your password.
        </p>
        <div class="form-group">
            <div class="input-icon">
                <i class="fa fa-envelope"></i>
                <input class="form-control placeholder-no-fix" type="text" autocomplete="off" placeholder="Email" name="email" />
            </div>
        </div>
        <div class="form-actions">
            <button type="button" id="back-btn" class="btn">
                <i class="m-icon-swapleft"></i>Back
            </button>
            <button type="submit" class="btn green pull-right">
                Submit <i class="m-icon-swapright m-icon-white"></i>
            </button>
        </div>
    </form>
</div>
<div class="copyright">
    &copy; @DateTime.Now.Year BY SIAM MARKET
</div>

<!-- END COPYRIGHT -->
@section scripts{
    @Scripts.Render("~/bundles/page-login")
    <script>
        jQuery(document).ready(function () {
            Metronic.init(); // init metronic core components
            Layout.init(); // init current layout
            QuickSidebar.init() // init quick sidebar
            Login.init();
        });
    </script>
}